{"title":"Lab-Classes","summary":"BlueJ Chapter 1","description":"","lastUpdated":1728497245198,"output":"terminal","classes":[{"name":"Student","content":"\n/**\n * The Student class represents a student in a student administration system.\n * It holds the student details relevant in our context.\n * \n * @author Michael Kölling and David Barnes\n * @version 2016.02.29\n */\npublic class Student\n{\n    // the student's full name\n    private String name;\n    // the student ID\n    private String id;\n    // the amount of credits for study taken so far\n    private int credits;\n\n    /**\n     * Create a new student with a given name and ID number.\n     */\n    public Student(String fullName, String studentID)\n    {\n        name = fullName;\n        id = studentID;\n        credits = 0;\n    }\n\n    /**\n     * Return the full name of this student.\n     */\n    public String getName()\n    {\n        return name;\n    }\n\n    /**\n     * Set a new name for this student.\n     */\n    public void changeName(String replacementName)\n    {\n        name = replacementName;\n    }\n\n    /**\n     * Return the student ID of this student.\n     */\n    public String getStudentID()\n    {\n        return id;\n    }\n\n    /**\n     * Add some credit points to the student's accumulated credits.\n     */\n    public void addCredits(int additionalPoints)\n    {\n        credits += additionalPoints;\n    }\n\n    /**\n     * Return the number of credit points this student has accumulated.\n     */\n    public int getCredits()\n    {\n        return credits;\n    }\n\n    /**\n     * Return the login name of this student. The login name is a combination\n     * of the first four characters of the student's name and the first three\n     * characters of the student's ID number.\n     */\n    public String getLoginName()\n    {\n        return name.substring(0,4) + id.substring(0,3);\n    }\n    \n    /**\n     * Print the student's name and ID number to the output terminal.\n     */\n    public void print()\n    {\n        System.out.println(name + \", student ID: \" + id + \", credits: \" + credits);\n    }\n}\n","position":{"x":105.71198325124224,"y":125.547760569523}},{"name":"LabClass","content":"import java.util.*;\n\n/**\n * The LabClass class represents an enrolment list for one lab class. It stores\n * the time, room and participants of the lab, as well as the instructor's name.\n * \n * @author Michael Kölling and David Barnes\n * @version 2016.02.29\n */\npublic class LabClass\n{\n    private String instructor;\n    private String room;\n    private String timeAndDay;\n    private ArrayList<Student> students;\n    private int capacity;\n    \n    /**\n     * Create a LabClass with a maximum number of enrolments. All other details\n     * are set to default values.\n     */\n    public LabClass(int maxNumberOfStudents)\n    {\n        instructor = \"unknown\";\n        room = \"unknown\";\n        timeAndDay = \"unknown\";\n        students = new ArrayList<Student>();\n        capacity = maxNumberOfStudents;\n    }\n\n    /**\n     * Add a student to this LabClass.\n     */\n    public void enrollStudent(Student newStudent)\n    {\n        if(students.size() == capacity) {\n            System.out.println(\"The class is full, you cannot enrol.\");\n        }\n        else {\n            students.add(newStudent);\n        }\n    }\n    \n    /**\n     * Return the number of students currently enrolled in this LabClass.\n     */\n    public int numberOfStudents()\n    {\n        return students.size();\n    }\n    \n    /**\n     * Set the room number for this LabClass.\n     */\n    public void setRoom(String roomNumber)\n    {\n        room = roomNumber;\n    }\n    \n    /**\n     * Set the time for this LabClass. The parameter should define the day\n     * and the time of day, such as \"Friday, 10am\".\n     */\n    public void setTime(String timeAndDayString)\n    {\n        timeAndDay = timeAndDayString;\n    }\n    \n    /**\n     * Set the name of the instructor for this LabClass.\n     */\n    public void setInstructor(String instructorName)\n    {\n        instructor = instructorName;\n    }\n    \n    /**\n     * Print out a class list with other LabClass details to the standard\n     * terminal.\n     */\n    public void printList()\n    {\n        System.out.println(\"Lab class \" + timeAndDay);\n        System.out.println(\"Instructor: \" + instructor + \"   Room: \" + room);\n        System.out.println(\"Class list:\");\n        for(Student student : students) {\n            student.print();\n        }\n        System.out.println(\"Number of students: \" + numberOfStudents());\n    }\n}\n","position":{"x":-106.82208319975001,"y":25.38513291920009}}]}